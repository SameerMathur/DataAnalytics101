# Live Case: S&P500 (1)

*Sep 30, 2023.*

## S&P 500

The S&P 500, also called the Standard & Poor's 500, is a stock market index that tracks the performance of 500 major publicly traded companies listed on U.S. stock exchanges. It serves as a widely accepted benchmark for assessing the overall health and performance of the U.S. stock market.

S&P Dow Jones Indices, a division of S&P Global, is responsible for maintaining the index. The selection of companies included in the S&P 500 is determined by a committee, considering factors such as market capitalization, liquidity, and industry representation.

The S&P is a float-weighted index, meaning the market capitalizations of the companies in the index are adjusted by the number of shares available for public trading. https://www.investopedia.com/terms/s/sp500.asp

The performance of the S&P 500 is frequently used to gauge the broader stock market and is commonly referenced by investors, analysts, and financial media. It provides a snapshot of how large-cap U.S. stocks are faring and is considered a reliable indicator of overall market sentiment.

Typically, the S&P 500 index consists of 500 stocks. However, in reality, there are actually 503 stocks included. This discrepancy arises because three of the listed companies have multiple share classes, and each class is considered a separate stock that needs to be included in the index.

**Strengths**:

1. **Diverse Representation**: The S&P 500 isn't fixated on a single industry. From technology to healthcare, it offers a panoramic view of various economic sectors, making it an inclusive representation of the U.S. corporate sector.

2. **Benchmark for Investors**: For many fund managers, outperforming the S&P 500 stands as a golden standard. It's a yardstick, establishing it as a critical touchstone for gauging investment success.

3. **Liquidity and Visibility**: Constituent companies enjoy high liquidity and are subject to rigorous screening processes, ensuring that the index represents financially viable entities.

**Critiques**:

1. **Market Capitalization Weighting**: The index is weighted by market capitalization, meaning companies with higher market values have a more pronounced effect on its performance. Critics argue this approach can skew perceptions, especially during market bubbles when certain sectors are overvalued.

2. **Exclusivity**: Despite its broad purview, 500 companies cannot encapsulate the entire U.S. economy. Many sectors, especially emerging industries or smaller businesses, might not be adequately represented.

3. **Potential for Complacency**: The prominence of the S&P 500 has led many investors to adopt passive investment strategies, tracking the index rather than actively managing portfolios. Detractors argue this might lead to market inefficiencies and reduced capital allocation efficacy.

While the S&P 500 remains an influential and pivotal tool for investors, its dominance prompts a double-edged sword of advantages and critiques. In a constantly evolving economic landscape, understanding both its power and limitations is essential for informed financial decision-making.

References:

1. **S&P Global**:
   S&P Global. (n.d.). S&P 500. Retrieved September 14, 2023, from https://www.spglobal.com/spdji/en/indices/equity/sp-500/

2. **MarketWatch**:
   MarketWatch. (n.d.). S&P 500 Index. Retrieved September 14, 2023, from https://www.marketwatch.com/investing/index/spx

3. **Bloomberg**:
   Bloomberg. (n.d.). S&P 500 Index (SPX:IND). Retrieved September 14, 2023, from https://www.bloomberg.com/quote/SPX:IND




## S&P 500 Data 

### Load some useful R packages

```{r, warning=FALSE}
# Load the required libraries, suppressing annoying startup messages
library(dplyr, quietly = TRUE, warn.conflicts = FALSE) # For data manipulation
library(tibble, quietly = TRUE, warn.conflicts = FALSE) # For data manipulation
library(ggplot2, quietly = TRUE, warn.conflicts = FALSE) # For data visualization
library(ggpubr, quietly = TRUE, warn.conflicts = FALSE) # For data visualization

library(gsheet, quietly = TRUE, warn.conflicts = FALSE) # For Google Sheets
library(rmarkdown, quietly = TRUE, warn.conflicts = FALSE) # For writing
library(knitr, quietly = TRUE, warn.conflicts = FALSE) # For tables
library(kableExtra, quietly = TRUE, warn.conflicts = FALSE) # For tables
```

### Read the S&P500 data from a Google Sheet into a tibble

1. We will analyze a real-world, recent dataset containing information about the S&P500 stocks. The dataset is located in a <a href="https://docs.google.com/spreadsheets/d/11ahk9uWxBkDqrhNm7qYmiTwrlSC53N1zvXYfv7ttOCM/edit#gid=0" target="_blank">Google Sheet</a> and periodically updated. 
2.  The complete URL of the Google Sheet that has the data is\
    <a href="https://docs.google.com/spreadsheets/d/11ahk9uWxBkDqrhNm7qYmiTwrlSC53N1zvXYfv7ttOCM/edit#gid=0" target="_blank">https://docs.google.com/spreadsheets/d/11ahk9uWxBkDqrhNm7qYmiTwrlSC53N1zvXYfv7ttOCM/</a>

3.  The Google Sheet ID is: `11ahk9uWxBkDqrhNm7qYmiTwrlSC53N1zvXYfv7ttOCM`. We can use the function `gsheet2tbl` in package `gsheet` to read the Google Sheet into a tibble , as demonstrated in the following code.

```{r, warning=FALSE}
# Read S&P500 stock data present in a Google Sheet.
library(gsheet)
prefix <- "https://docs.google.com/spreadsheets/d/"
sheetID <- "11ahk9uWxBkDqrhNm7qYmiTwrlSC53N1zvXYfv7ttOCM"
url500 <- paste(prefix,sheetID) # Form the URL to connect to
sp500 <- gsheet2tbl(url500) # Read it into a tibble called sp500
```

4. **Reference**: This data has been sourced from websites like Yahoo Finance and TradingView.com and it is current as of **`r sp500$Date[1]`**


## Review the S&P 500 data


1. The data corresponds to `r nrow(sp500)` companies that are part of the S&P500 and includes `r ncol(sp500)` data columns.

```{r}
dim(sp500)
```

2. The first ten stocks in the S&P500 data, their Sector and their recent prices are as follows:

```{r}
sp500 %>%
  select(Stock, Description, Sector, Date, Price) %>%
  head(10) %>%
  kable("html", caption = "The first 10 companies in the S&P500 dataset") %>% 
  kable_styling()
```


3. Data Columns

* The data comprises of the following `r ncol(sp500)` columns:

```{r}
colnames(sp500) 
```

* The names of the data columns are self-explanatory. The Financial terms are explained in depth on multiple external websites such as www.Investopedia.com


### Rename Data Columns

4.  The names of the data columns are lengthy and confusing. We will rename the data columns to make it easier to work with the data.

```{r, warning=FALSE}
# Define a mapping of new column names
new_names <- c(
  "Date", "Stock", "StockName", "Sector", "Industry", 
  "MarketCap", "Price", "Low52Wk", "High52Wk", 
  "ROE", "ROA", "ROIC", "GrossMargin", 
  "OperatingMargin", "NetMargin", "PE", 
  "PB", "EVEBITDA", "EBITDA", "EPS", 
  "EBITDA_YOY", "EBITDA_QYOY", "EPS_YOY", 
  "EPS_QYOY", "PFCF", "FCF", 
  "FCF_QYOY", "DebtToEquity", "CurrentRatio", 
  "QuickRatio", "DividendYield", 
  "DividendsPerShare_YOY", "PS", 
  "Revenue_YOY", "Revenue_QYOY", "Rating"
)
# Rename the columns using the new_names vector
colnames(sp500)<-new_names
```

5.  We review the column names again after renaming them, using the `colnames()` function can help.

```{r, warning=FALSE}
colnames(sp500)
```

### Understand the Data Columns

6.  The complete data has 36 columns. Our next goal is to gain a deeper understanding of what the data columns mean. We reorganize the column names into eight tables, labeled Table 1a, 1b.. 1h.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
library(tibble)
new_names <- c(
  "Date", "Stock", "StockName", "Sector", "Industry", 
  "MarketCap", "Price", "Low52Wk", "High52Wk", 
  "ROE", "ROA", "ROIC", "GrossMargin", 
  "OperatingMargin", "NetMargin", "PE", 
  "PB", "EVEBITDA", "EBITDA", "EPS", 
  "EBITDA_YOY", "EBITDA_QYOY", "EPS_YOY", 
  "EPS_QYOY", "PFCF", "FCF", 
  "FCF_QYOY", "DebtToEquity", "CurrentRatio", 
  "QuickRatio", "DividendYield", 
  "DividendsPerShare_YOY", "PS", 
  "Revenue_YOY", "Revenue_QYOY", "Rating"
)
descriptions <- c(
  "Date (e.g. \"7/15/2023\")",
  "Stock Ticker (e.g. AAL)",
  "Name of the company (e.g \"American Airlines Group, Inc.\")",
  "Sector the stock belongs to (e.g. \"Transportation\")",
  "Industry the stock belongs to (e.g \"Airlines\")",
  "Market capitalization of the company",
  "Recent Stock Price",
  "52-Week Low Price",
  "52-Week High Price",
  "Return on Equity",
  "Return on Assets",
  "Return on Invested Capital",
  "Gross Profit Margin",
  "Operating Profit Margin",
  "Net Profit Margin",
  "Price-to-Earnings Ratio",
  "Price-to-Book Ratio",
  "Enterprise Value to EBITDA Ratio",
  "EBITDA",
  "Earnings per Share",
  "EBITDA Year-over-Year Growth",
  "EBITDA Quarterly Year-over-Year Growth",
  "EPS Year-over-Year Growth",
  "EPS Quarterly Year-over-Year Growth",
  "Price-to-Free Cash Flow",
  "Free Cash Flow",
  "Free Cash Flow Quarterly Year-over-Year Growth",
  "Debt-to-Equity Ratio",
  "Current Ratio",
  "Quick Ratio",
  "Dividend Yield",
  "Annual Dividends per Share Year-over-Year Growth",
  "Price-to-Sales Ratio",
  "Revenue Year-over-Year Growth",
  "Revenue Quarterly Year-over-Year Growth",
  "Technical Rating"
)
column_info <- tibble(ColumnName = new_names, Description = descriptions)
```

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
# Create different Tables explaining different columns in the data
library(dplyr)
stockCols = slice(column_info, c(1:7))
taCols = slice(column_info, c(8,9,36))
profitabilityCols = slice(column_info, c(10:15))
earningsCols = slice(column_info, c(16:24))
fcfCols = slice(column_info, c(25:27))
liquidityCols = slice(column_info, c(28:30))
dividendCols = slice(column_info, c(31:32))
revenueCols = slice(column_info, c(33:35))
```

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
suppressPackageStartupMessages(library(kableExtra))
table1a <- knitr::kable(stockCols, "html")  %>% kable_styling() %>% add_header_above(c("Table 1a: Data Columns giving basic Company Information" = ncol(column_info)))
table1b <- knitr::kable(taCols, "html")  %>% kable_styling() %>% add_header_above(c("Table 1b: Data Columns related to Pricing and Technical Analysis" = ncol(column_info)))
table1c <- knitr::kable(profitabilityCols, "html") %>% kable_styling() %>% add_header_above(c("Table 1c: Data Columns related to Profitability" = ncol(column_info)))
table1d <- knitr::kable(earningsCols, "html")  %>% kable_styling() %>% add_header_above(c("Table 1d: Data Columns related to Earnings" = ncol(column_info)))
table1e <- knitr::kable(fcfCols, "html")  %>% kable_styling() %>% add_header_above(c("Table 1e: Data Columns related to Free Cash Flow" = ncol(column_info)))
table1f <- knitr::kable(liquidityCols, "html")  %>% kable_styling() %>% add_header_above(c("Table 1f: Data Columns related to Liquidiy" = ncol(column_info)))
table1g <- knitr::kable(revenueCols, "html")  %>% kable_styling() %>% add_header_above(c("Table 1g: Data Columns related to Revenue" = ncol(column_info)))
table1h <- knitr::kable(dividendCols, "html")  %>% kable_styling() %>% add_header_above(c("Table 1h: Data Columns related to Dividends" = ncol(column_info)))
```

a.  The column names described in Table 1a. concern basic **Company Information** of each stock.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1a 
```

b.  The column names described in Table 1b. are related to **Technical Analysis** of each stock, including the 52-Week High and Low prices.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1b
```

c.  The column names described in Table 1c. are related to the **Profitability** of each stock.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1c
```

d. The column names described in Table 1d are related to the **Earnings** of each stock.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1d
```

e. The column names described in Table 1e are related to the **Free Cash Flow** of each stock.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1e
```

f. The column names described in Table 1f concern the **Liquidity** of each stock.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1f
```

g. The column names described in Table 1g are related to the **Revenue** of each stock.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1g
```

h. The column names described in Table 1h are related to the **Dividends** of each stock.

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
table1h
```



### Stock Ratings

1. In the data, the S&P500 shares have Technical Ratings such as {Strong Buy, Buy, Neutral, Sell, Strong Sell}. Since each Stock has a unique Technical Rating, it makes sense to model the data column Rating as a factor() variable.

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
sp500$Rating <- as.factor(sp500$Rating)
```

2. We confirm that Rating is now modelled as a factor variable, by running the str() function.

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
str(sp500$Rating)
```

3. We can use the levels() function to review the different levels it can take.

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
levels(sp500$Rating)
```

4. The table() function allows us to count how many stocks have each Rating.

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
table(sp500$Rating)
```

5. Thus, we can see how many stocks have ratings ranging from "Strong Sell" to "Strong Buy". This completes our review of Rating.




### Sectors within the S&P500 

* The S&P 500 comprises a wide array of sectors, reflecting the diverse American corporate landscape. 

* The data showcases the S&P500 divided across `r length(unique(sp500$Sector))` Sectors. Here's an overview of the sectors, along with some representative companies:

1. **Commercial Services (13 companies)**: This sector comprises firms offering services primarily to businesses. 
Example: Accenture, a management consulting and professional services firm.
   
2. **Communications (3 companies)**: This sector covers companies involved in telecommunication and media.
Example: AT&T, a telecommunications giant.

3. **Consumer Durables (12 companies)**: Companies producing goods that aren't bought frequently and have a longer life, such as appliances and cars.
Example: Whirlpool, an appliance manufacturer.

4. **Consumer Non-Durables (32 companies)**: These are entities that produce goods that are consumed quickly or are non-reusable.
Example: The Coca-Cola Company, known globally for its beverages.

5. **Consumer Services (29 companies)**: This includes companies that offer services directly to consumers.
Example: Walt Disney Company, known for its entertainment services.

6. **Distribution Services (9 companies)**: Companies engaged in the distribution of products.
Example: Sysco, a major food distributor.

7. **Electronic Technology (49 companies)**: Represents companies engaged in electronics research and product development.
Example: Apple, known for its iPhone and other electronic products.

8. **Energy Minerals (16 companies)**: Companies that extract and produce energy resources.
Example: ExxonMobil, one of the world's largest oil and gas companies.

9. **Finance (92 companies)**: Covers banks, insurance companies, investment firms, REITs and other financial institutions.
Example: JPMorgan Chase, a leading global financial services firm.

10. **Health Services (12 companies)**: Includes providers of health services like hospital management.
Example: HCA Healthcare, a major hospital operator.

11. **Health Technology (47 companies)**: Companies that produce medical equipment, pharmaceuticals, and other health-related tech.
Example: Pfizer, a global pharmaceutical company.

12. **Industrial Services (9 companies)**: Firms providing services primarily to the industrial sector.
Example: Caterpillar, a leading manufacturer of construction and mining equipment.

13. **Non-Energy Minerals (7 companies)**: Companies involved in the extraction of minerals other than energy resources.
Example: Vulcan Materials, a producer of construction aggregates.

14. **Process Industries (24 companies)**: This sector comprises entities that transform raw materials into finished goods.
Example: Dow Inc., a major chemical manufacturer.

15. **Producer Manufacturing (31 companies)**: Companies engaged in the manufacturing of products for industries and consumers.
Example: 3M, known for its diversified manufacturing.

16. **Retail Trade (22 companies)**: Companies directly involved in selling products to consumers.
Example: Walmart, the multinational retail corporation.

17. **Technology Services (50 companies)**: Companies that offer tech services, including IT consulting and software services.
Example: Microsoft, a global leader in software and cloud services.

18. **Transportation (15 companies)**: Covers companies involved in the transportation of goods and people.
Example: Delta Air Lines, a major U.S. airline.

19. **Utilities (31 companies)**: Companies providing essential services like electricity, gas, and water.
Example: Duke Energy, a prominent utility company.









### Analysis of S&P 500 Sectors

1. The S&P500 shares are divided into multiple Sectors. Each stock belongs to a unique sector. Thus, it makes sense to model Sector as a factor() variable.

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
sp500$Sector <- as.factor(sp500$Sector)
```

2. We confirm that Sector is now modelled as a factor variable, by running the str() function.

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
str(sp500$Sector)
```
3. We can use the levels() function to review the different levels it can take.

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
levels(sp500$Sector)
```



-   The S&P500 consists of `r nrow(sp500)` stocks, divided across `r length(unique(sp500$Sector))` sectors.

```{r}
ggplot(data = sp500, 
       aes(y = Sector)) + 
  geom_bar(aes(fill = Sector)) +
  geom_text(stat='count', 
            aes(label=after_stat(count))) +
  labs(title = "Stocks by Sector", 
       x = "No. of Stocks", 
       y = "Sector")
```

-   Thus, we can see how many stocks are part of each one of the 19 sectors. We can sum them to confirm that they add up to `r sum(table(sp500$Sector))` stocks. 





### MarketCap by Sector

1. The S&P500 shares are divided into multiple Sectors. Each stock belongs to a unique sector. Thus, it makes sense to model Sector as a factor() variable.

We review the Market Cap of S&P500 stocks across Sectors.

```{r}
MarketCapbySector <- sp500 %>%
  mutate(Market_Cap_Billions = round(MarketCap/1000000000, 2)) %>%
  group_by(Sector) %>%
  summarise(MarketCapBillions = sum(Market_Cap_Billions, na.rm = TRUE))  %>%
  arrange(-MarketCapBillions)  

# Create a summary row
summary_row <- tibble(
  Sector = "Total",
  MarketCapBillions = sum(MarketCapbySector$Market_Cap_Billions)
)
# Append the summary row to the result
MarketCapbySector <- bind_rows(MarketCapbySector, summary_row)

# Render the table
MarketCapbySector %>%
  kable("html", caption = "Market Capitalization (Billions of USD) by S&P500 Sector") %>% 
  kable_styling()
```








## Summary of Chapter -- Exploring S&P500 Data

This chapter embarks on an exploration of the S&P500, a significant stock market index encompassing 500 major publicly traded companies in the U.S. The chapter introduces the index's role as a benchmark for assessing the overall health and performance of the U.S. stock market, maintained by S&P Dow Jones Indices.

This chapter skillfully guides readers through the intricacies of exploring S&P500 data, employing practical examples and R code to foster a deeper understanding of the dataset's structure and content. Further exploration is encouraged with a wealth of references for continued learning and analysis.

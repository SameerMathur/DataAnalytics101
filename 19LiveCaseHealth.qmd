# Live Case: S&P500 (2)

*Sep 05, 2023*

## Objective

TBE...

```{r, warning=FALSE}
# Load the required libraries, suppressing annoying startup messages
library(dplyr, quietly = TRUE, warn.conflicts = FALSE)
library(tibble, quietly = TRUE, warn.conflicts = FALSE)
library(ggplot2, quietly = TRUE, warn.conflicts = FALSE) # For data visualization
library(ggpubr, quietly = TRUE, warn.conflicts = FALSE) # For data visualization

library(gsheet, quietly = TRUE, warn.conflicts = FALSE) 
library(rmarkdown, quietly = TRUE, warn.conflicts = FALSE) 
library(knitr, quietly = TRUE, warn.conflicts = FALSE) 
library(kableExtra, quietly = TRUE, warn.conflicts = FALSE) 
```

## S&P 500 Data - PRELIMINARY SETUP

1.  We will continue our analysis of the S&P 500. Load the data, as described in the chapter Live Case: S&P500 (1 of 3)

```{r, warning=FALSE}
# Read S&P500 stock data present in a Google Sheet.
library(gsheet)
prefix <- "https://docs.google.com/spreadsheets/d/"
sheetID <- "11ahk9uWxBkDqrhNm7qYmiTwrlSC53N1zvXYfv7ttOCM"
url500 <- paste(prefix,sheetID) # Form the URL to connect to
sp500 <- gsheet2tbl(url500) # Read it into a tibble called sp500
```

2.  Rename columns, as described in the chapter Live Case: S&P500 (1 of 3).

```{r, warning=FALSE}
suppressPackageStartupMessages(library(dplyr))

# Define a mapping of new column names
new_names <- c(
  "Date", "Stock", "StockName", "Sector", "Industry", 
  "MarketCap", "Price", "Low52Wk", "High52Wk", 
  "ROE", "ROA", "ROIC", "GrossMargin", 
  "OperatingMargin", "NetMargin", "PE", 
  "PB", "EVEBITDA", "EBITDA", "EPS", 
  "EBITDA_YOY", "EBITDA_QYOY", "EPS_YOY", 
  "EPS_QYOY", "PFCF", "FCF", 
  "FCF_QYOY", "DebtToEquity", "CurrentRatio", 
  "QuickRatio", "DividendYield", 
  "DividendsPerShare_YOY", "PS", 
  "Revenue_YOY", "Revenue_QYOY", "Rating"
)
# Rename the columns using the new_names vector
sp500 <- sp500 %>% 
  rename_with(~ new_names, everything())
```

```{r, warning=FALSE, eval=TRUE, echo=FALSE}
library(tibble)
new_names <- c(
  "Date", "Stock", "StockName", "Sector", "Industry", 
  "MarketCap", "Price", "Low52Wk", "High52Wk", 
  "ROE", "ROA", "ROIC", "GrossMargin", 
  "OperatingMargin", "NetMargin", "PE", 
  "PB", "EVEBITDA", "EBITDA", "EPS", 
  "EBITDA_YOY", "EBITDA_QYOY", "EPS_YOY", 
  "EPS_QYOY", "PFCF", "FCF", 
  "FCF_QYOY", "DebtToEquity", "CurrentRatio", 
  "QuickRatio", "DividendYield", 
  "DividendsPerShare_YOY", "PS", 
  "Revenue_YOY", "Revenue_QYOY", "Rating"
)
descriptions <- c(
  "Date (e.g. \"7/15/2023\")",
  "Stock Ticker (e.g. AAL)",
  "Name of the company (e.g \"American Airlines Group, Inc.\")",
  "Sector the stock belongs to (e.g. \"Transportation\")",
  "Industry the stock belongs to (e.g \"Airlines\")",
  "Market capitalization of the company",
  "Recent Stock Price",
  "52-Week Low Price",
  "52-Week High Price",
  "Return on Equity",
  "Return on Assets",
  "Return on Invested Capital",
  "Gross Profit Margin",
  "Operating Profit Margin",
  "Net Profit Margin",
  "Price-to-Earnings Ratio",
  "Price-to-Book Ratio",
  "Enterprise Value to EBITDA Ratio",
  "EBITDA",
  "Earnings per Share",
  "EBITDA Year-over-Year Growth",
  "EBITDA Quarterly Year-over-Year Growth",
  "EPS Year-over-Year Growth",
  "EPS Quarterly Year-over-Year Growth",
  "Price-to-Free Cash Flow",
  "Free Cash Flow",
  "Free Cash Flow Quarterly Year-over-Year Growth",
  "Debt-to-Equity Ratio",
  "Current Ratio",
  "Quick Ratio",
  "Dividend Yield",
  "Annual Dividends per Share Year-over-Year Growth",
  "Price-to-Sales Ratio",
  "Revenue Year-over-Year Growth",
  "Revenue Quarterly Year-over-Year Growth",
  "Technical Rating"
)
column_info <- tibble(ColumnName = new_names, Description = descriptions)
```

3.  Remove Rows containing no data or Null values, as described in the chapter Live Case: S&P500 (1 of 3).

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
# Check for blank or null values in the "Stock" column
hasNull <- any(sp500$Stock == "" | is.null(sp500$Stock))
if (hasNull) { 
    # Remove rows with null or blank values from the dataframe tibble
    sp500 <- sp500[!(is.null(sp500$Stock) | sp500$Stock == ""), ]
}
```

4.  The S&P500 shares are divided into multiple Sectors. Thus, model Sector as a factor() variable, as described in the chapter Live Case: S&P500 (1 of 3).

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
sp500$Sector <- as.factor(sp500$Sector)
```

5.  Stock Ratings: The S&P500 shares have Technical Ratings such as {Buy, Sell, ..}. Model the data column Rating as a factor() variable, as described in the chapter Live Case: S&P500 (1 of 3).

```{r, warning=FALSE, eval=TRUE, echo=TRUE}
sp500$Rating <- as.factor(sp500$Rating)
```

6.  Low52WkPerc: Create a new column to track Share Prices relative to their 52 Week Low, as described in the chapter Live Case: S&P500 (1 of 3).

```{r  warning=FALSE, eval=TRUE, echo=TRUE}
sp500 <- sp500 %>% mutate(Low52WkPerc = round((Price - Low52Wk)*100 / Low52Wk,2))
colnames(sp500)
```

Well done! Our data is now ready for analysis!!

7.  Low52WkPerc: Create a new column MarketCapBillions = MarketCap/1000,000,000, as described in the chapter Live Case: S&P500 (1 of 3).

```{r  warning=FALSE, eval=TRUE, echo=TRUE}
sp500 <- sp500 %>% mutate(MarketCapBillions = round(MarketCap/1000000000))
colnames(sp500)
```

## Live Case: S&P500

ISSUE: Analysis of a particular SECTOR We have chosen to deeply analyze the HEALTH TECHNOLOGY Sector

## SECTOR LEVEL ANALYSIS begins here

### Filter the data by sector Health Services, and display the number of stocks in the sector

```{r warning=FALSE, eval=TRUE, echo=TRUE}
ts <- sp500 %>%
		filter(Sector=='Health Services')

nrow(ts)
```

There are 12 number of of stocks in the sector Health Services

### Select the Specific Coulumns from the filtered dataframe `ts` (Health Services)

```{r warning=FALSE, eval=TRUE, echo=TRUE}
ts2 <- ts %>%
		select(Date, Stock, StockName,Sector,  Industry, MarketCap, Price,Low52Wk, High52Wk,
		       ROE, ROA,ROIC,GrossMargin, GrossMargin, 
		       NetMargin, Rating)

colnames(ts2)
```

### Arrange the Dataframe by ROE

```{r warning=FALSE, eval=TRUE, echo=TRUE}
ts3 <- ts2 %>% arrange(desc(ROE))
```

### Top 10 Shares in Sector Health Services Based on ROE

```{r warning=FALSE, eval=TRUE, echo=TRUE}
head(ts3,10)
```

### Significance of 52-Week Low Price

The 52-week low price of a stock is a significant indicator for multiple reasons, especially when considering shares listed on major indices like the S&P 500. Here's why this metric is noteworthy:

1.  **Historical Perspective**: The 52-week low offers a snapshot of how low the stock has traded over the past year relative to its current price, providing context about its price journey.

2.  **Potential Entry Point**: Some investors view stocks that are near their 52-week low as potential buying opportunities, under the assumption that the stock might be undervalued and could rebound.

3.  **Psychological Level**: Stocks approaching their 52-week low can be seen as testing a significant support level. If a stock consistently fails to breach its 52-week low, it might indicate that the market values the stock at that level, and it's resistant to falling below it.

4.  **Basis for Technical Analysis**: For technical analysts or traders, the 52-week low serves as a critical reference point. A consistent breach of this level might signify a bearish trend, while a rebound can indicate potential recovery.

5.  **Yield Implications for Dividend Stocks**: For dividend-paying stocks, a price near the 52-week low (assuming the dividend hasn't been cut) would imply a higher dividend yield, potentially making it attractive for income-seeking investors.

-   **Note of Caution:** While the 52-week low is a valuable reference point, it's essential to interpret it in conjunction with other financial and market indicators. A stock trading near its 52-week low doesn't automatically make it a good buy, just as a stock trading near its 52-week high doesn't automatically make it overvalued. Comprehensive analysis, should inform investment decisions.

### Mutate a data column called (Low52WkPerc), then show top 10 ROE stocks

```{r  warning=FALSE, eval=TRUE, echo=TRUE}
ts4 <- ts3 %>% mutate(Low52WkPerc = round((Price - Low52Wk)*100 / Low52Wk,2))
head(ts4[,c(1:3,10,16)],10)
```

## Summary Statistics of Low52WkPerc (Price rel. to 52-Week Low)

```{r eval=TRUE, echo=TRUE, warning=FALSE}
summaryStats <- ts4 %>% summarise(
  N = n(),
  Mean = mean(Low52WkPerc),
  SD = sd(Low52WkPerc),
  Median = median(Low52WkPerc),
  Q1 = quantile(Low52WkPerc, 0.25),
  Q3 = quantile(Low52WkPerc, 0.75),
  Min = min(Low52WkPerc),
  Max = max(Low52WkPerc)
) 

Low52WkPercQ1 <- summaryStats$Q1 # Save Q1 of Low52WkPerc

summaryStats %>% 
  round(2) %>%
  kable("html", caption = "Summary Statistics of Low52WkPerc (Price rel. to 52-Week Low)") %>% 
  kable_styling()
```

*Low52WkPerc for all the Health Sector Stocks, as shown below*

```{r eval=TRUE, echo=FALSE, warning=FALSE}
PlotBox <- ggboxplot(ts4, 
            y = "Low52WkPerc", 
            rug = TRUE, 
            color = "black",
            fill = "gold",
            add = "jitter",
            orientation = "horizontal",
            title = "Box Plot showing (Median, Q1, Q3) of Low52WkPerc"
)
```

```{r  eval=TRUE, echo=FALSE, warning=FALSE}
# Create a summary data frame
data_summary <- ts4 %>%
  summarise(
    MeanLow52WkPerc = mean(Low52WkPerc, na.rm = TRUE),
    SDLow52WkPerc = sd(Low52WkPerc, na.rm = TRUE)
  )

PlotBar <- ggplot(data_summary, 
       aes(y = "", 
           x = MeanLow52WkPerc)) +
  geom_bar(stat = "identity", 
           fill = "lightpink", color = "lightpink") +
  geom_errorbar(aes(xmin = MeanLow52WkPerc - SDLow52WkPerc, 
                    xmax = MeanLow52WkPerc + SDLow52WkPerc), 
                width = .2) +
  labs(x = "Low52WkPerc", y = "",
       title = "Bar Plot showing (Mean +/- SD) of Low52WkPerc") +
  theme_minimal() 
```

```{r eval=TRUE, echo=FALSE, warning=FALSE}
# Combine the plots using ggarrange()
ggarrange(PlotBox, PlotBar, nrow = 2)
```

## Inexpensive Stocks with Low52WkPerc \< Q1(Low52WkPerc)

```{r eval=TRUE, echo=TRUE, warning=FALSE}
ts4 %>% 
  select(Stock, StockName, Price, Low52Wk, Low52WkPerc) %>% 
  filter(Low52WkPerc < Low52WkPercQ1) %>% 
  arrange(Low52WkPerc)%>%
  kable("html", caption = "Inexpensive Stocks with Low52WkPerc < Q1(Low52WkPerc)") %>% 
  kable_styling()
```

### Summary Statistics of Return on Equity (ROE)

```{r}
summaryStats <- ts4 %>% summarise(
  N = n(),
  Mean = mean(ROE, na.rm = TRUE),
  SD = sd(ROE, na.rm = TRUE),
  Median = median(ROE, na.rm = TRUE),
  Q1 = quantile(ROE, 0.25, na.rm = TRUE),
  Q3 = quantile(ROE, 0.75, na.rm = TRUE),
  Min = min(ROE, na.rm = TRUE),
  Max = max(ROE, na.rm = TRUE)
) 

ROE_Q3 <- summaryStats$Q3

summaryStats %>% 
  round(2) %>%
  kable("html", caption = "Summary Statistics of Return on Equity (ROE)") %>% 
  kable_styling()
```

-   ROE for all the Stocks in Health Sector, as shown below

```{r eval=TRUE, echo=FALSE, warning=FALSE}
PlotBox <- ggboxplot(ts4, 
            y = "ROE", 
            rug = TRUE, 
            color = "black",
            fill = "gold",
            add = "jitter",
            orientation = "horizontal",
            title = "Box Plot showing (Median, Q1, Q3) of ROE"
)
```

```{r eval=TRUE, echo=FALSE, warning=FALSE}
# Create a summary data frame
data_summary <- ts4 %>%
  summarise(
    MeanROE = mean(ROE, na.rm = TRUE),
    SDROE = sd(ROE, na.rm = TRUE)
  )
# Generate a Bar Plot
PlotBar <- ggplot(data_summary, 
       aes(y = "", 
           x = MeanROE)) +
  geom_bar(stat = "identity", 
           fill = "lightpink", color = "lightpink") +
  geom_errorbar(aes(xmin = MeanROE - SDROE, 
                    xmax = MeanROE + SDROE), 
                width = .2) +
  labs(x = "ROE", y = "",
       title = "Bar Plot showing (Mean +/- SD) of ROE") +
  theme_minimal() 
```

```{r eval=TRUE, echo=FALSE, warning=FALSE}
# Combine the plots using ggarrange()
ggarrange(PlotBox, PlotBar, nrow = 2)
```

### Stocks with ROE \> Q3(ROE)

```{r}
ts4 %>% 
  select(Stock, StockName, Price, ROA, ROE, Low52Wk, Low52WkPerc) %>% 
  filter(ROE > ROE_Q3) %>%
  arrange(desc(ROE)) %>%
  kable("html", caption = "Stocks with ROE > Q3(ROE)") %>% 
  kable_styling()

```

### Summary Statistics of Return on Equity (ROA)

```{r}
summaryStats <- ts4 %>% summarise(
  N = n(),
  Mean = mean(ROA, na.rm = TRUE),
  SD = sd(ROA, na.rm = TRUE),
  Median = median(ROA, na.rm = TRUE),
  Q1 = quantile(ROA, 0.25, na.rm = TRUE),
  Q3 = quantile(ROA, 0.75, na.rm = TRUE),
  Min = min(ROA, na.rm = TRUE),
  Max = max(ROA, na.rm = TRUE)
) 

ROA_Q3 <- summaryStats$Q3

summaryStats %>% 
  round(2) %>%
  kable("html", caption = "Summary Statistics of Return on Equity (ROA)") %>% 
  kable_styling()
```

-   ROA for all the Stocks in Health Sector, as shown below

```{r eval=TRUE, echo=FALSE, warning=FALSE}
PlotBox <- ggboxplot(ts4, 
            y = "ROA", 
            rug = TRUE, 
            color = "black",
            fill = "gold",
            add = "jitter",
            orientation = "horizontal",
            title = "Box Plot showing (Median, Q1, Q3) of ROA"
)
```

```{r eval=TRUE, echo=FALSE, warning=FALSE}
# Create a summary data frame
data_summary <- ts4 %>%
  summarise(
    MeanROA = mean(ROA, na.rm = TRUE),
    SDROA = sd(ROA, na.rm = TRUE)
  )
# Generate a Bar Plot
PlotBar <- ggplot(data_summary, 
       aes(y = "", 
           x = MeanROA)) +
  geom_bar(stat = "identity", 
           fill = "lightpink", color = "lightpink") +
  geom_errorbar(aes(xmin = MeanROA - SDROA, 
                    xmax = MeanROA + SDROA), 
                width = .2) +
  labs(x = "ROA", y = "",
       title = "Bar Plot showing (Mean +/- SD) of ROA") +
  theme_minimal() 
```

```{r eval=TRUE, echo=FALSE, warning=FALSE}
# Combine the plots using ggarrange()
ggarrange(PlotBox, PlotBar, nrow = 2)
```

### Stocks with ROA \> Q3(ROA)

```{r}
ts4 %>% 
  select(Stock, StockName, Price, ROA, ROE, Low52Wk, Low52WkPerc) %>% 
  filter(ROA > ROA_Q3) %>%
  arrange(desc(ROA)) %>%
  kable("html", caption = "Stocks with ROA > Q3(ROA)") %>% 
  kable_styling()

```

### ROE versus ROA and colored by Price rel. to 52 Week Low

```{r, warning=FALSE}
top10 <- 
  ts4 %>% 
  select(Stock, Price, Low52Wk, Low52WkPerc, ROA, ROE) %>% 
  arrange(desc(ROE))%>%
  slice(1:10)

top10$name <- top10$Stock

ggscatter(top10, 
          x = "ROA", 
          y = "ROE", 
          size = "Low52WkPerc",
          color = "Low52WkPerc",
          alpha = 0.5,
          label = "name", 
          repel = TRUE,
          title = "ROE vs ROA, Low52WkPerc for Health Sector with highest ROE") + 
  gradient_color(c("darkgreen",  "red"))
```

### Summary Statistics of All key variables in Sector Health Services

```{r}
ts3 <- na.omit(ts3)

ROESum <- ts3 %>%
  summarise(
    Mean = mean(ROE),
    Median= sd(ROE),
    Median= median(ROE),
    Q1 = quantile(ROE, probs = 0.25, na.rm = TRUE),
    Q3 = quantile(ROE, probs = 0.75, na.rm = TRUE),
    Min = min(ROE),
    max = max(ROE)
  )

ROESum <- round(ROESum,2)


ROASum <- ts3 %>%
  summarise(
    Mean = mean(ROA),
    Median= sd(ROA),
    Median= median(ROA),
    Q1 = quantile(ROA, probs = 0.25, na.rm = TRUE),
    Q3 = quantile(ROA, probs = 0.75, na.rm = TRUE),
    Min = min(ROA),
    max = max(ROA)
  )

ROASum <- round(ROASum,2)

ROICSum <- ts3 %>%
  summarise(
    Mean = mean(ROIC),
    Median= sd(ROIC),
    Median= median(ROIC),
    Q1 = quantile(ROIC, probs = 0.25, na.rm = TRUE),
    Q3 = quantile(ROIC, probs = 0.75, na.rm = TRUE),
    Min = min(ROIC),
    max = max(ROIC)
  )

ROICSum <- round(ROICSum,2)

GrossMarginSum <- ts3 %>%
  summarise(
    Mean = mean(GrossMargin),
    Median= sd(GrossMargin),
    Median= median(GrossMargin),
    Q1 = quantile(GrossMargin, probs = 0.25, na.rm = TRUE),
    Q3 = quantile(GrossMargin, probs = 0.75, na.rm = TRUE),
    Min = min(GrossMargin),
    max = max(GrossMargin)
  )

GrossMarginSum <- round(GrossMarginSum,2)

NetMarginSum <- ts3 %>%
  summarise(
    Mean = mean(NetMargin),
    Median= sd(NetMargin),
    Median= median(NetMargin),
    Q1 = quantile(NetMargin, probs = 0.25, na.rm = TRUE),
    Q3 = quantile(NetMargin, probs = 0.75, na.rm = TRUE),
    Min = min(NetMargin),
    max = max(NetMargin)
  )

NetMarginSum <- round(NetMarginSum,2)

Metrics <- c("ROE","ROA","ROIC","GrossMargin","NetMargin")

ftab <- rbind(ROESum, ROASum, ROICSum, GrossMarginSum, NetMarginSum)
ftab <- cbind(Metrics, ftab)
ftab
```

## ANALYSIS OF HEALTH SERVICES SECTOR

1.  Market Cap of all companies in Sector Health Services

```{r  warning=FALSE, eval=TRUE, echo=TRUE,message=FALSE}
library(janitor)
library(kableExtra)
# Market Cap by Stock
MCap <- ts3 %>%
  group_by(Stock) %>%
  summarise(
    MarketCapBi = round(sum(na.omit(MarketCap)/1000000000),2))

# Sp500 Market Cap

SP500MarketCap <- sum(ts3$MarketCap/1000000000)

# calculating % market cap
PercentMarketCap <- round(MCap$MarketCapBi*100/SP500MarketCap,2)
MCapTab <- cbind(MCap,PercentMarketCap)

# sorting by PercentMarketCap
MCapTab <- MCapTab %>% arrange(desc(PercentMarketCap))


MCapTab <- MCapTab %>%
  adorn_totals("row")

MCapTab <- knitr::kable(MCapTab, "html") %>% kable_styling() 
MCapTab 
```

2.  Shares which are most attractively priced in Sector Health Services

```{r  warning=FALSE, eval=TRUE, echo=TRUE,message=FALSE}
AttrShares <- ts4 %>% arrange(Low52WkPerc)
AttrShares <- AttrShares[, c(2:4,7,8,10,11,16)]

AttrShares <- knitr::kable(AttrShares, "html") %>% kable_styling() 
AttrShares 
```

### PROFITABILITY OF HEALTH SERVICES SECTOR

1.  Shares have highest ROE within Sector Technology Services

```{r  warning=FALSE, eval=TRUE, echo=TRUE,message=FALSE}
AttrShares <- ts4 %>% arrange(desc(ROE))
AttrShares <- AttrShares[, c(2:4,7,8,10,11,16)]

AttrShares <- knitr::kable(AttrShares, "html") %>% kable_styling() 
AttrShares 
```

2.  Shares have highest ROA within Sector Health Services

```{r  warning=FALSE, eval=TRUE, echo=TRUE,message=FALSE}
AttrShares <- ts4 %>% arrange(desc(ROA))
AttrShares <- AttrShares[, c(2:4,7,8,10,11,16)]

AttrShares <- knitr::kable(AttrShares, "html") %>% kable_styling() 
AttrShares 
```
